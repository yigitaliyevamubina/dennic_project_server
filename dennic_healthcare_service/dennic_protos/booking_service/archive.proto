syntax = "proto3";

package booking_service;

service ArchiveService {
  // archive
  rpc CreateArchive(CreateArchiveReq) returns (Archive);
  rpc GetArchive(ArchiveFieldValueReq) returns (Archive);
  rpc GetAllArchives(GetAllArchivesReq) returns (Archives);
  rpc UpdateArchive(UpdateArchiveReq) returns (Archive);
  rpc DeleteArchive(ArchiveFieldValueReq) returns (DeleteArchiveStatus);
}

message Archive {
  int64 id = 1;
  int64 doctor_availability_id = 2;
  string start_time = 3;
  string end_time = 4;
  string patient_problem = 5;
  string status = 6;
  string payment_type = 7;
  float payment_amount = 8;
  string created_at = 9;
  string updated_at = 10;
  string deleted_at = 11;
}

message Archives {
  int64 count = 1;
  repeated Archive archives = 2;
}

message CreateArchiveReq {
  int64 doctor_availability_id = 1;
  string start_time = 2;
  string end_time = 3;
  string patient_problem = 4;
  string status = 5;
  string payment_type = 6;
  float payment_amount = 7;
}

message UpdateArchiveReq {
  string field = 1;
  string value = 2;
  int64 doctor_availability_id = 3;
  string start_time = 4;
  string end_time = 5;
  string patient_problem = 6;
  string status = 7;
  string payment_type = 8;
  float payment_amount = 9;
}

message ArchiveFieldValueReq {
  string field = 1;
  string value = 2;
  bool is_active = 3;
}

message DeleteArchiveStatus {
  bool status = 1;
}

message GetAllArchivesReq {
  string field = 1;
  string value = 2;
  bool is_active = 3;
  uint64 page = 4;
  uint64 limit = 5;
  string order_by = 6;
}